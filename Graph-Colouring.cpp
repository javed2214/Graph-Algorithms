// Graph Colouring Using DFS

#include<bits/stdc++.h>
using namespace std;

void printMatrix(char mat[][100], int R, int C){

	for(int i=0;i<R;i++){
		for(int j=0;j<C;j++){
			cout<<mat[i][j];
		}
		cout<<endl;
	}
}

void floodFill(char mat[][100], int i, int j, char ch, char color, int R, int C){

	if(i<0 or j<0 or i>=R or j>=C or mat[i][j]!=ch)
		return;

	mat[i][j]=color;

	floodFill(mat,i+1,j,ch,color,R,C);
	floodFill(mat,i,j+1,ch,color,R,C);
	floodFill(mat,i-1,j,ch,color,R,C);
	floodFill(mat,i,j-1,ch,color,R,C);
}

int main(){

	char mat[100][100];

	int R,C;
	cin>>R>>C;

	for(int i=0;i<R;i++){
		for(int j=0;j<C;j++)
			cin>>mat[i][j];
	}
	printMatrix(mat,R,C);

	cout<<endl<<endl;

	floodFill(mat,8,18,'.','R',R,C);
	printMatrix(mat,R,C);

	return 0;
}

/*

INPUT ==>>

14 37
.....................................
.....................................
.....................................
.....................................
............##########...............
............#........#...............
............#........#...............
............#........#...............
............#........#...............
............##########...............
.....................................
.....................................
.....................................
.....................................


OUTPUT ==>>

.....................................
.....................................
.....................................
.....................................
............##########...............
............#RRRRRRRR#...............
............#RRRRRRRR#...............
............#RRRRRRRR#...............
............#RRRRRRRR#...............
............##########...............
.....................................
.....................................
.....................................
.....................................


*/